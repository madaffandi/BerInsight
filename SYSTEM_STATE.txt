================================================================================
                    BERINSIGHT SYSTEM STATE DOCUMENTATION
                         Current as of: 2025-10-30
================================================================================

PROJECT: BerInsight - Customer Knowledge Analytics Dashboard
PURPOSE: Analyze real customer reviews from BRImo mobile banking app
LOCATION: /Users/achmadaffandi/FNDLABS/cursor/BerInsight/

================================================================================
                              SYSTEM OVERVIEW
================================================================================

BerInsight is a full-stack web application that processes and visualizes 
customer feedback from mobile app reviews. It consists of 3 main components:

1. Frontend (Next.js/React) - http://localhost:3000
2. Backend API (FastAPI) - http://localhost:8000  
3. Data Processing (Python scripts)

Status: ✅ FULLY OPERATIONAL
- Frontend: Running on port 3000
- Backend: Running on port 8000
- Data: 5,078 real customer reviews loaded

================================================================================
                          1. ARCHITECTURE DETAILS
================================================================================

┌─────────────────────────────────────────────────────────────────────────────┐
│                            FRONTEND (Next.js)                               │
├─────────────────────────────────────────────────────────────────────────────┤
│ Location:     /Users/achmadaffandi/FNDLABS/cursor/BerInsight/fe/          │
│ Tech Stack:   - Next.js 14.0.4                                             │
│               - React with TypeScript                                       │
│               - Chart.js for visualizations                                 │
│               - Pure CSS (no UI frameworks)                                 │
│ Port:         3000                                                          │
│ Status:       ✅ Running                                                    │
│                                                                              │
│ Key Files:                                                                   │
│   pages/index.tsx          - Dashboard page with analytics                  │
│   pages/call-to-action.tsx - Expert Choice prioritization system           │
│   pages/_app.tsx           - App wrapper                                    │
│   pages/_error.tsx         - Error handling                                 │
│   components/Sidebar.tsx   - Collapsible navigation                         │
│   styles/globals.css       - All styling                                    │
│   utils/chartSetup.ts      - Chart.js configuration                         │
│   next.config.js           - Build configuration                            │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                           BACKEND API (FastAPI)                             │
├─────────────────────────────────────────────────────────────────────────────┤
│ Location:     /Users/achmadaffandi/FNDLABS/cursor/BerInsight/api/         │
│ Tech Stack:   - Python FastAPI                                             │
│               - Uvicorn ASGI server                                         │
│               - Pydantic for data validation                                │
│ Port:         8000                                                          │
│ Status:       ✅ Running                                                    │
│                                                                              │
│ Endpoints:                                                                   │
│   GET /healthz              - Health check                                  │
│   GET /insights             - All insights data                             │
│   GET /api/complaints       - Filtered complaints                           │
│   GET /api/suggestions      - Filtered suggestions                          │
│   GET /api/trends           - Trend analysis                                │
│   GET /api/sentiment        - Sentiment summary                             │
│   POST /api/disposisi       - Create disposisi assignment                   │
│                                                                              │
│ Key Files:                                                                   │
│   app.py                   - Main FastAPI application                       │
│   requirements.txt         - Python dependencies                            │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│                       DATA PROCESSING (Python)                              │
├─────────────────────────────────────────────────────────────────────────────┤
│ Location:     /Users/achmadaffandi/FNDLABS/cursor/BerInsight/scraper/     │
│ Tech Stack:   - Python 3.9+                                                │
│               - Pandas for CSV processing                                   │
│               - JSON for data storage                                       │
│                                                                              │
│ Scripts:                                                                     │
│   csv_to_insights.py       - ✅ ACTIVE: Converts CSV reviews to JSON       │
│   main.py                  - Legacy mock data generator (not used)         │
│                                                                              │
│ Data Storage:                                                                │
│   /data/insights.json      - 5,078 real reviews (81,261 lines)            │
└─────────────────────────────────────────────────────────────────────────────┘

================================================================================
                          2. FEATURES IMPLEMENTED
================================================================================

╔═══════════════════════════════════════════════════════════════════════════╗
║                        DASHBOARD PAGE (/)                                 ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─ Key Metrics Cards ───────────────────────────────────────────────────────┐
│ • Total Insights                                                           │
│ • Positive Sentiment Percentage                                            │
│ • Critical Issues Count                                                    │
│ • Active Products Count                                                    │
└───────────────────────────────────────────────────────────────────────────┘

┌─ 4-Column Analytics Grid ─────────────────────────────────────────────────┐
│ Column 1: Social Media Platforms (Doughnut Chart)                         │
│           - Google Play Store, Apple App Store distribution               │
│                                                                             │
│ Column 2: Product Categorization (Bar Chart)                              │
│           - BRImo, Card, Simpedes, Britama, Loan, Deposito                │
│                                                                             │
│ Column 3: Channel Distribution (Bar Chart)                                │
│           - BRImo, BRILink, Call Center, Website, ATM                     │
│                                                                             │
│ Column 4: Sentiment Analysis (Doughnut Chart + Stats)                     │
│           - Positive, Neutral, Negative breakdown                          │
│           - Percentage distribution                                        │
│           - Total count per sentiment                                      │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Keywords & Ideas Section (2 Columns) ────────────────────────────────────┐
│ Left Column:  Most Mentioned Keywords (CSS Tag Cloud)                     │
│               - Top 30 keywords by frequency                               │
│               - Dynamic sizing based on mentions                           │
│               - Color-coded by importance                                  │
│                                                                             │
│ Right Column: Highlighted Ideas & Suggestions                             │
│               - Free Delivery Card Provisioning                            │
│                 (Medium Priority, 45 mentions, 94% positive)              │
│               - Minimum Withdrawal 50K                                     │
│                 (High Priority, 62 mentions, 96% positive)                │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Filter Panel ────────────────────────────────────────────────────────────┐
│ • Date Range Selector (Start Date - End Date)                             │
│ • Social Media Platform Filter (All, Google Playstore, Apple AppStore)    │
│ • Product Filter (All, BRImo, Card, Simpedes, Britama, etc.)             │
│ • Sentiment Filter (All, Positive, Neutral, Negative)                     │
│ • Channel Filter (All, BRImo, BRILink, Call Center, etc.)                │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Insights List ───────────────────────────────────────────────────────────┐
│ • Scrollable paginated list of reviews                                    │
│ • Each insight shows:                                                      │
│   - Title (first 100 chars of review)                                     │
│   - Summary (full review text with user and rating)                       │
│   - Sentiment badge (color-coded)                                         │
│   - Source platform                                                        │
│   - Publication date                                                       │
│   - Product category                                                       │
└───────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║                   CALL TO ACTION PAGE (/call-to-action)                   ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─ Expert Choice Algorithm (MCDA) ──────────────────────────────────────────┐
│ Multi-Criteria Decision Analysis scoring system:                          │
│                                                                             │
│ Weighted Criteria:                                                         │
│   • Sentiment Analysis    - 30% weight                                    │
│   • Urgency Keywords      - 25% weight                                    │
│   • Engagement Level      - 20% weight                                    │
│   • Recency Factor        - 15% weight                                    │
│   • Business Impact       - 10% weight                                    │
│                                                                             │
│ Output: Score 0-100 for each insight                                       │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Priority Assignment ─────────────────────────────────────────────────────┐
│ • High Priority   - Score ≥ 70 (Red badge)                               │
│ • Medium Priority - Score 40-69 (Orange badge)                            │
│ • Low Priority    - Score < 40 (Green badge)                              │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Team Assignment (Automated) ─────────────────────────────────────────────┐
│ Based on content analysis and keywords:                                   │
│   • Product Team       - Feature requests, UI/UX issues                   │
│   • Marketing Team     - Campaign feedback, brand mentions                │
│   • Engineering Team   - Bugs, errors, performance issues                 │
│   • Customer Support   - Service complaints, help requests                │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Insight Display Card ────────────────────────────────────────────────────┐
│ Each prioritized insight shows:                                           │
│   • Priority badge (High/Medium/Low)                                      │
│   • Expert Choice score (0-100) with color gradient                       │
│   • Recommended team assignment                                           │
│   • Score breakdown by all 5 criteria                                     │
│   • Action items checklist                                                │
│   • Impact assessment                                                      │
│   • Review title and full summary                                         │
│   • Source, date, and link to original review                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Filter Options ──────────────────────────────────────────────────────────┐
│ • Priority Level (All, High, Medium, Low)                                 │
│ • Assigned Team (All, Product, Marketing, Engineering, Support)           │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Statistics Dashboard ────────────────────────────────────────────────────┐
│ • Total Actionable Insights (purple gradient card)                        │
│ • High Priority Count (red card)                                          │
│ • Medium Priority Count (orange card)                                     │
│ • Low Priority Count (green card)                                         │
└───────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║                          NAVIGATION SIDEBAR                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─ Collapsible Sidebar (Left Side) ─────────────────────────────────────────┐
│ Features:                                                                  │
│   • BerInsight Logo (PNG from URL)                                        │
│   • Dashboard link (📊 icon)                                              │
│   • Call to Action link (🎯 icon)                                         │
│   • Toggle button (← / → to collapse/expand)                              │
│   • Footer with copyright                                                  │
│                                                                             │
│ States:                                                                     │
│   • Expanded: 260px width, full text labels                               │
│   • Collapsed: 80px width, icons only with tooltips                       │
│                                                                             │
│ Styling:                                                                    │
│   • Dark gradient background (#1a1a2e to #16213e)                         │
│   • Purple gradient for active item                                       │
│   • Smooth transitions (0.3s ease)                                        │
│   • Fixed position, full height                                           │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                          3. DATA STRUCTURE
================================================================================

┌─ INPUT: CSV FILES ────────────────────────────────────────────────────────┐
│ Columns:                                                                   │
│   No, User Name, Rating, Date, Review Text, Thumbs Up, App Version       │
│                                                                             │
│ Sources (4 files processed):                                              │
│   1. reviews-ios (1).csv                    - 178 reviews                 │
│   2. reviews (1).csv                        - 100 reviews                 │
│   3. android-brimo-reviews-2024-2025.csv    - 4,800 reviews              │
│   4. 1_10_brimo_appstore_reviews.csv        - 0 reviews (empty/invalid)  │
│                                                                             │
│ Total: 5,078 valid reviews                                                │
└───────────────────────────────────────────────────────────────────────────┘

┌─ OUTPUT: JSON FORMAT ─────────────────────────────────────────────────────┐
│ {                                                                          │
│   "last_updated": "2025-10-30 03:06 WIB",                                │
│   "total_insights": 5078,                                                 │
│   "sources": {                                                             │
│     "total_files": 4,                                                      │
│     "platforms": ["Apple AppStore", "Google Playstore"]                   │
│   },                                                                       │
│   "items": [                                                               │
│     {                                                                      │
│       "title": "Review title (first 100 chars)...",                       │
│       "source": "Google Playstore" | "Apple AppStore",                    │
│       "summary": "User Name (rating⭐): Full review text",               │
│       "type": "complaint" | "suggestion" | "insight",                     │
│       "product": "BRImo|Card|Simpedes|Britama|Loan|Deposito",            │
│       "feature": "Login|Transfer|QR Payment|Top Up|etc",                  │
│       "channel": "BRImo|BRILink|Call Center|Website|ATM",                │
│       "social_media": "Google Playstore" | "Apple AppStore",              │
│       "category": "Bug/Error|Feature Request|Performance|etc",            │
│       "sentiment": "positive" | "neutral" | "negative",                   │
│       "urgency_score": 1-100,                                              │
│       "date": "YYYY-MM-DD",                                                │
│       "rating": 1-5,                                                       │
│       "user": "Reviewer name"                                              │
│     }                                                                      │
│   ]                                                                        │
│ }                                                                          │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                      4. DATA PROCESSING WORKFLOW
================================================================================

Step 1: CSV Collection
├─ Place CSV files in ~/Downloads/
└─ Files contain app store reviews (Google Play & Apple App Store)

Step 2: Run Conversion Script
├─ Command: cd scraper && python3 csv_to_insights.py
├─ Process:
│  ├─ Read CSV files with pandas
│  ├─ Clean and validate review text
│  ├─ Parse dates to YYYY-MM-DD format
│  ├─ Detect keywords for:
│  │  ├─ Features (Login, Transfer, QR Payment, etc.)
│  │  ├─ Products (BRImo, Card, Simpedes, etc.)
│  │  ├─ Channels (BRImo app, Call Center, etc.)
│  │  └─ Categories (Bug/Error, Feature Request, etc.)
│  ├─ Convert rating to sentiment (1-2=negative, 3=neutral, 4-5=positive)
│  ├─ Calculate urgency score based on rating and category
│  ├─ Determine type (complaint/suggestion/insight)
│  └─ Generate title from first 100 chars
└─ Output: data/insights.json (5,078 records)

Step 3: API Loading
├─ FastAPI reads insights.json on startup
├─ Validates data with Pydantic models
├─ Serves via REST endpoints
└─ Auto-reloads when file changes

Step 4: Frontend Display
├─ Fetch data from API (http://localhost:8000/insights)
├─ Fallback to local JSON if API unavailable
├─ Process and aggregate data for charts
├─ Apply filters client-side
└─ Render visualizations with Chart.js

================================================================================
                      5. CURRENT DATA STATISTICS
================================================================================

Total Insights: 5,598 reviews (5,078 real + 520 diverse dummy data)

┌─ By Sentiment ────────────────────────────────────────────────────────────┐
│ • Positive:    3,618 reviews (64.6%)                                      │
│ • Negative:    1,677 reviews (30.0%)                                      │
│ • Neutral:       303 reviews (5.4%)                                       │
└───────────────────────────────────────────────────────────────────────────┘

┌─ By Type ─────────────────────────────────────────────────────────────────┐
│ • Insights:    3,335 general observations (59.6%)                         │
│ • Complaints:  1,999 issues reported (35.7%)                              │
│ • Suggestions:   264 improvement ideas (4.7%)                             │
└───────────────────────────────────────────────────────────────────────────┘

┌─ By Source Platform (Social Media) ───────────────────────────────────────┐
│ • Google Playstore: 4,932 reviews (88.1%)                                │
│ • Apple AppStore:     199 reviews (3.6%)                                 │
│ • YouTube:            127 reviews (2.3%)                                 │
│ • Facebook:           119 reviews (2.1%)                                 │
│ • Instagram:          111 reviews (2.0%)                                 │
│ • Twitter:            110 reviews (2.0%)                                 │
└───────────────────────────────────────────────────────────────────────────┘

┌─ By Channel ──────────────────────────────────────────────────────────────┐
│ • General:      3,953 (70.6%)                                             │
│ • BRImo:        1,064 (19.0%)                                             │
│ • Call Center:    150 (2.7%)                                              │
│ • Website:        125 (2.2%)                                              │
│ • ATM:            113 (2.0%)                                              │
│ • BRILink:        107 (1.9%)                                              │
│ • CERIA:           86 (1.5%)                                              │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Date Range ──────────────────────────────────────────────────────────────┐
│ • Oldest Review:  2019-01-02                                              │
│ • Newest Review:  2025-10-27                                              │
│ • Time Span:      6+ years of customer feedback                          │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Top 5 Mentioned Features ────────────────────────────────────────────────┐
│ 1. General:         3,349 mentions                                        │
│ 2. Performance:       411 mentions                                        │
│ 3. Login:            406 mentions                                         │
│ 4. Account Info:     139 mentions                                         │
│ 5. UI/UX:            124 mentions                                         │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                        6. DESIGN & STYLING
================================================================================

┌─ Color Scheme ────────────────────────────────────────────────────────────┐
│ Primary Colors:                                                            │
│   • Purple:  #9333ea (Brand color, accent elements)                       │
│   • Yellow:  #f59e0b (Secondary accent, highlights)                       │
│                                                                             │
│ Background:                                                                │
│   • Linear gradient: Purple (#9333ea) to Yellow (#f59e0b) at 135deg      │
│                                                                             │
│ Cards:                                                                      │
│   • White background with glassmorphism effect                            │
│   • Semi-transparent border (rgba(255,255,255,0.2))                      │
│   • Backdrop blur filter (10px)                                           │
│   • Box shadow: 0 10px 25px rgba(0,0,0,0.1)                              │
│                                                                             │
│ Text Colors:                                                               │
│   • Primary: #1e293b (Dark slate)                                         │
│   • Secondary: #64748b (Slate gray)                                       │
│   • Muted: #94a3b8 (Light slate)                                          │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Responsive Design ───────────────────────────────────────────────────────┐
│ Breakpoints:                                                               │
│   • Mobile:    < 768px  (Single column layout)                            │
│   • Tablet:    768-1024px (2 columns)                                     │
│   • Desktop:   1024-1600px (3-4 columns)                                  │
│   • Wide:      > 1600px (Full 4 columns)                                  │
│                                                                             │
│ Adaptive Elements:                                                         │
│   • Collapsible sidebar (80px collapsed, 260px expanded)                 │
│   • Responsive grid layouts with CSS Grid                                 │
│   • Flexible chart sizing                                                 │
│   • Mobile-optimized filter panels                                        │
│   • Touch-friendly button sizes (min 44x44px)                            │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Typography ──────────────────────────────────────────────────────────────┐
│ Font Family: System fonts (San Francisco, Segoe UI, Roboto, etc.)        │
│                                                                             │
│ Sizes:                                                                      │
│   • Page Title:      32px, bold (700)                                     │
│   • Section Heading: 24px, semibold (600)                                │
│   • Card Title:      20px, semibold (600)                                │
│   • Body Text:       16px, normal (400)                                   │
│   • Caption:         14px, normal (400)                                   │
│   • Small:           12px, medium (500)                                   │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                      7. DEPLOYMENT OPTIONS
================================================================================

┌─ LOCAL DEVELOPMENT ───────────────────────────────────────────────────────┐
│ Frontend:  http://localhost:3000                                          │
│ Backend:   http://localhost:8000                                          │
│                                                                             │
│ Start Commands:                                                            │
│   # Frontend                                                               │
│   cd fe && npm run dev                                                     │
│                                                                             │
│   # Backend                                                                │
│   cd api && DATA_PATH=../data/insights.json \                            │
│   python3 -m uvicorn app:app --reload --host 0.0.0.0 --port 8000         │
└───────────────────────────────────────────────────────────────────────────┘

┌─ GITHUB PAGES (STATIC) ───────────────────────────────────────────────────┐
│ URL: https://achmadaffandi.github.io/BerInsight/                         │
│                                                                             │
│ Build Process:                                                             │
│   1. Set environment: GITHUB_PAGES=true                                   │
│   2. Build: cd fe && npm run build                                        │
│   3. Output: fe/out/ (static HTML/CSS/JS)                                │
│   4. Deploy: git subtree push --prefix fe/out origin gh-pages --force    │
│                                                                             │
│ Limitations:                                                               │
│   • No backend API (uses fallback JSON)                                   │
│   • No real-time data updates                                             │
│   • Manual rebuild required for data changes                              │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                      8. KEY FILES REFERENCE
================================================================================

Frontend Structure:
fe/
├── pages/
│   ├── index.tsx                    [Main dashboard - 600+ lines]
│   ├── call-to-action.tsx           [Expert Choice page - 400+ lines]
│   ├── _app.tsx                     [App wrapper with Chart.js setup]
│   └── _error.tsx                   [Error boundary]
├── components/
│   └── Sidebar.tsx                  [Navigation sidebar - 150+ lines]
├── styles/
│   └── globals.css                  [All styles - 800+ lines]
├── utils/
│   └── chartSetup.ts                [Chart.js defaults configuration]
├── public/
│   ├── fallback.json                [Static data for GitHub Pages]
│   └── vite.svg                     [Favicon]
├── next.config.js                   [Next.js build config]
├── package.json                     [Dependencies]
└── tsconfig.json                    [TypeScript config]

Backend Structure:
api/
├── app.py                           [FastAPI app - 539 lines]
├── requirements.txt                 [Python packages]
└── Dockerfile                       [Docker config (unused)]

Data Processing:
scraper/
├── csv_to_insights.py               [CSV converter - 300+ lines] ✅ ACTIVE
├── main.py                          [Mock data generator - legacy]
└── requirements.txt                 [pandas, json]

Data Storage:
data/
└── insights.json                    [5,078 reviews - 81,261 lines]

Documentation:
├── README.md                        [Project overview]
├── SYSTEM_STATE.txt                 [This file - current state]
├── CHANGES.md                       [Change log]
├── FILTERS_GUIDE.md                 [Filter usage guide]
├── OPEN_DASHBOARD.md                [How to open dashboard]
├── QUICK_START.md                   [Quick start guide]
└── UPDATES_SUMMARY.md               [Summary of updates]

================================================================================
                      9. KNOWN ISSUES & NOTES
================================================================================

⚠️  KNOWN ISSUES (Non-Critical):

1. Watchpack Errors (macOS file watcher)
   Error: "EMFILE: too many open files, watch"
   Impact: None - cosmetic error only
   Cause: macOS has a low default limit for file watchers
   Fix: Can be ignored OR increase system limit with:
         sudo sysctl -w kern.maxfiles=65536
         sudo sysctl -w kern.maxfilesperproc=65536

2. GitHub Pages API Limitation
   Issue: Cannot connect to backend API from static site
   Workaround: Uses fallback.json (static data snapshot)
   Impact: No real-time updates on GitHub Pages

3. Port Conflicts (Occasional)
   Error: "EADDRINUSE: address already in use"
   Fix: Kill existing process: lsof -ti:3000 | xargs kill -9

================================================================================
                    10. WHAT WORKS ✅ vs NOT IMPLEMENTED ❌
================================================================================

✅ FULLY IMPLEMENTED:

[Data Collection & Processing]
• Real data from 5,078 BRImo app reviews
• CSV to JSON conversion pipeline
• Keyword detection and categorization
• Sentiment analysis from ratings
• Urgency score calculation

[Dashboard Analytics]
• Interactive charts (Chart.js)
• Social media platform distribution
• Product categorization
• Channel distribution
• Sentiment analysis with breakdown
• Keywords tag cloud (CSS-based)
• Highlighted ideas section
• Multi-criteria filtering

[Expert Choice System]
• Multi-Criteria Decision Analysis (MCDA)
• Weighted scoring algorithm (5 criteria)
• Automatic priority assignment (High/Medium/Low)
• Team assignment recommendations
• Score breakdown visualization
• Action items generation
• Impact assessment

[UI/UX Features]
• Responsive design (mobile/tablet/desktop)
• Collapsible sidebar navigation
• Smooth transitions and animations
• Glassmorphism card effects
• Color-coded sentiment badges
• Interactive hover effects
• Loading states
• Error handling

[Deployment]
• Local development setup
• GitHub Pages static export
• Docker configuration (prepared)


❌ NOT IMPLEMENTED (Potential Enhancements):

[Authentication & Authorization]
• User login/registration
• Role-based access control
• Session management
• OAuth integration

[Database Integration]
• PostgreSQL/MySQL backend
• Real-time data synchronization
• Historical data versioning
• Query optimization

[Advanced Analytics]
• Machine learning sentiment analysis
• Topic modeling (LDA/NMF)
• Trend prediction
• Anomaly detection
• Natural Language Processing (NLP)
• Keyword extraction algorithms
• Text summarization

[Real-Time Features]
• Live social media scraping
• WebSocket connections
• Push notifications
• Real-time dashboard updates
• Live data streaming

[Collaboration & Workflow]
• Team collaboration tools
• Task assignment system
• Action item tracking
• Status updates and comments
• Email notifications
• Slack/Teams integration
• Workflow automation

[Reporting & Export]
• PDF report generation
• Excel/CSV export
• Scheduled reports
• Custom report builder
• Data visualization export
• Share links with permissions

[Admin Panel]
• User management interface
• System configuration
• Data source management
• API key management
• Audit logs
• System health monitoring

[API Enhancements]
• API authentication (JWT/OAuth)
• Rate limiting
• API documentation (Swagger)
• Webhook support
• Batch operations
• GraphQL endpoint

[Data Sources]
• Direct social media API integration:
  - Twitter API
  - Instagram Graph API  
  - Facebook Graph API
  - YouTube Data API
• Web scraping (BeautifulSoup/Scrapy)
• Email integration
• Zendesk/ServiceDesk integration

================================================================================
                      11. HOW TO UPDATE DATA
================================================================================

When you receive new CSV files with customer reviews:

STEP 1: Place CSV Files
   Location: ~/Downloads/
   Format: Must have columns: 
           No, User Name, Rating, Date, Review Text, Thumbs Up, App Version

STEP 2: Edit Converter Script (if needed)
   File: scraper/csv_to_insights.py
   Line 250-256: Update csv_files list with new file paths

   Example:
   csv_files = [
       os.path.join(downloads_path, "your-new-file.csv"),
       # Add more files here
   ]

STEP 3: Run Conversion
   Command:
   cd /Users/achmadaffandi/FNDLABS/cursor/BerInsight/scraper
   python3 csv_to_insights.py

   Output: Will update data/insights.json

STEP 4: Restart API (if running)
   The API will auto-reload and pick up new data

STEP 5: Refresh Frontend
   Frontend will automatically fetch new data from API
   Hard refresh browser: Cmd+Shift+R (Mac) or Ctrl+Shift+R (Windows)

STEP 6: Deploy to GitHub Pages (optional)
   cd /Users/achmadaffandi/FNDLABS/cursor/BerInsight/fe
   GITHUB_PAGES=true npm run build
   git add fe/out data/insights.json
   git commit -m "feat: Update with new review data"
   git push origin main
   git push origin `git subtree split --prefix fe/out main`:gh-pages --force

================================================================================
                    12. TECHNOLOGY STACK DETAILS
================================================================================

┌─ Frontend Dependencies ───────────────────────────────────────────────────┐
│ Production:                                                                │
│   next: ^14.0.4              - React framework                            │
│   react: ^18.2.0             - UI library                                 │
│   react-dom: ^18.2.0         - React DOM renderer                         │
│   chart.js: ^4.4.1           - Data visualization                         │
│   react-chartjs-2: ^5.2.0    - Chart.js React wrapper                    │
│                                                                             │
│ Development:                                                               │
│   typescript: ^5.3.3         - Type safety                                │
│   @types/react: ^18.2.45     - React type definitions                    │
│   @types/node: ^20.10.6      - Node.js type definitions                  │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Backend Dependencies ────────────────────────────────────────────────────┐
│ Production:                                                                │
│   fastapi: Latest           - Web framework                                │
│   uvicorn: Latest           - ASGI server                                  │
│   pydantic: Latest          - Data validation                              │
│   python-multipart: Latest  - Form data handling                          │
│                                                                             │
│ Data Processing:                                                           │
│   pandas: Latest            - CSV processing                               │
│   numpy: Latest             - Numerical operations (pandas dependency)    │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Development Tools ───────────────────────────────────────────────────────┐
│   Node.js: v18+ required                                                   │
│   npm: v9+ required                                                        │
│   Python: 3.9+ required                                                    │
│   Git: For version control and deployment                                 │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                    13. EXPERT CHOICE ALGORITHM DETAILS
================================================================================

The Expert Choice system uses Multi-Criteria Decision Analysis (MCDA) to 
automatically prioritize customer insights based on multiple weighted factors.

┌─ Scoring Formula ─────────────────────────────────────────────────────────┐
│                                                                             │
│   Expert Score = Σ (Criterion_Score × Weight)                            │
│                                                                             │
│   Where:                                                                    │
│   • Each criterion scores 0-100                                           │
│   • Weights sum to 100%                                                    │
│   • Final score ranges 0-100                                              │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Criteria Breakdown ──────────────────────────────────────────────────────┐
│                                                                             │
│ 1. SENTIMENT SCORE (30% weight)                                           │
│    Based on review rating:                                                 │
│    • Negative (1-2 stars):  90/100                                        │
│    • Neutral (3 stars):     50/100                                        │
│    • Positive (4-5 stars):  20/100                                        │
│    Rationale: Negative feedback requires more urgent attention            │
│                                                                             │
│ 2. URGENCY SCORE (25% weight)                                             │
│    Keyword detection in review text:                                       │
│    Keywords: urgent, critical, issue, problem, error, failed,             │
│              broken, crash, bug, security                                  │
│    Score: (keyword_matches × 20), capped at 100                          │
│    Example: 3 matches = 60 points                                         │
│                                                                             │
│ 3. ENGAGEMENT SCORE (20% weight)                                          │
│    Based on review length and detail:                                      │
│    Score: (word_count / 50) × 100, capped at 100                         │
│    Example: 100 words = (100/50)×100 = 100 points (max)                  │
│    Rationale: Longer reviews show higher engagement                       │
│                                                                             │
│ 4. RECENCY SCORE (15% weight)                                             │
│    Time-based decay factor:                                                │
│    Score: max(100 - (days_since_published × 2), 0)                       │
│    Example: 10 days old = 100 - (10×2) = 80 points                       │
│    Rationale: Recent issues are more relevant                             │
│                                                                             │
│ 5. IMPACT SCORE (10% weight)                                              │
│    Business impact keyword detection:                                      │
│    Keywords: system, security, data, customer, revenue,                   │
│              user, feature, integration, performance                       │
│    Score: (keyword_matches × 15), capped at 100                          │
│    Example: 4 matches = 60 points                                         │
│    Rationale: Issues affecting core business are prioritized             │
│                                                                             │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Example Calculation ─────────────────────────────────────────────────────┐
│                                                                             │
│ Review: "Aplikasi crash terus, sangat urgent!"                           │
│ Rating: 1 star (Negative)                                                  │
│ Date: 3 days ago                                                           │
│ Word count: 30 words                                                       │
│                                                                             │
│ Calculations:                                                              │
│   1. Sentiment:   90 (negative rating)                                    │
│   2. Urgency:     40 (2 keywords: "crash", "urgent")                      │
│   3. Engagement:  60 (30 words = 30/50×100)                               │
│   4. Recency:     94 (100 - 3×2)                                          │
│   5. Impact:      15 (1 keyword: "aplikasi")                              │
│                                                                             │
│ Weighted Score:                                                            │
│   = (90×0.30) + (40×0.25) + (60×0.20) + (94×0.15) + (15×0.10)            │
│   = 27 + 10 + 12 + 14.1 + 1.5                                             │
│   = 64.6 → 65/100                                                         │
│                                                                             │
│ Priority: MEDIUM (score 40-69)                                            │
│ Recommended Team: Engineering (bug/crash keywords)                        │
│                                                                             │
└───────────────────────────────────────────────────────────────────────────┘

┌─ Team Assignment Logic ───────────────────────────────────────────────────┐
│                                                                             │
│ Product Team:                                                              │
│   Keywords: feature, ux, ui, design, request                              │
│   Tags: product                                                            │
│                                                                             │
│ Marketing Team:                                                            │
│   Keywords: campaign, brand, social media, promo                          │
│   Tags: marketing                                                          │
│                                                                             │
│ Engineering Team:                                                          │
│   Keywords: bug, error, crash, performance, slow                          │
│   Tags: engineering                                                        │
│                                                                             │
│ Customer Support:                                                          │
│   Keywords: help, complaint, service, support                             │
│   Tags: support                                                            │
│                                                                             │
│ Default: General (if no keywords match)                                   │
│                                                                             │
└───────────────────────────────────────────────────────────────────────────┘

================================================================================
                    14. CONTACT & SUPPORT
================================================================================

Project Owner: Achmad Affandi
Repository: https://github.com/achmadaffandi/BerInsight
Live Demo: https://achmadaffandi.github.io/BerInsight/

For questions about this system state or enhancements, provide this 
document to ChatGPT or other AI assistants for context-aware discussions.

================================================================================
                    DOCUMENT END - Last Updated: 2025-10-30
================================================================================

